// Code generated by goctl. DO NOT EDIT!
// Source: auth.proto

package server

import (
	"context"

	"github/yguilai/timetable-micro/services/auth/rpc/auth"
	"github/yguilai/timetable-micro/services/auth/rpc/internal/logic"
	"github/yguilai/timetable-micro/services/auth/rpc/internal/svc"
)

type AuthServer struct {
	svcCtx *svc.ServiceContext
}

func NewAuthServer(svcCtx *svc.ServiceContext) *AuthServer {
	return &AuthServer{
		svcCtx: svcCtx,
	}
}

func (s *AuthServer) Ping(ctx context.Context, in *auth.Request) (*auth.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *AuthServer) Create(ctx context.Context, in *auth.JwtCreateReq) (*auth.JwtCreateResp, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *AuthServer) Verify(ctx context.Context, in *auth.JwtVerifyReq) (*auth.JwtVerifyResp, error) {
	l := logic.NewVerifyLogic(ctx, s.svcCtx)
	return l.Verify(in)
}

func (s *AuthServer) Refresh(ctx context.Context, in *auth.JwtRefreshReq) (*auth.JwtRefreshResp, error) {
	l := logic.NewRefreshLogic(ctx, s.svcCtx)
	return l.Refresh(in)
}
